import m from"pify";var p=()=>{try{let e=(globalThis.navigator?.userAgent).match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];if(e[1]==="Chrome")return parseInt(e[2])<100||globalThis.chrome.runtime?.getManifest()?.manifest_version===2}catch{return!1}return!1};var l=class{#a;#e;get primaryClient(){return this.#e}#t;get secondaryClient(){return this.#t}#n;get area(){return this.#n}get hasWebApi(){try{return typeof window<"u"&&!!window.localStorage}catch(e){return console.error(e),!1}}#s=new Map;#h;get copiedKeySet(){return this.#h}isCopied=e=>this.hasWebApi&&(this.allCopied||this.copiedKeySet.has(e));#o=!1;get allCopied(){return this.#o}getExtStorageApi=()=>globalThis.browser?.storage||globalThis.chrome?.storage;get hasExtensionApi(){try{return!!this.getExtStorageApi()}catch(e){return console.error(e),!1}}isWatchSupported=()=>this.hasExtensionApi;keyNamespace="";isValidKey=e=>e.startsWith(this.keyNamespace);getNamespacedKey=e=>`${this.keyNamespace}${e}`;getUnnamespacedKey=e=>e.slice(this.keyNamespace.length);constructor({area:e="sync",allCopied:t=!1,copiedKeyList:s=[]}={}){this.setCopiedKeySet(s),this.#n=e,this.#o=t;try{this.hasWebApi&&(t||s.length>0)&&(this.#t=window.localStorage)}catch{}try{this.hasExtensionApi&&(this.#a=this.getExtStorageApi(),p()?this.#e=m(this.#a[this.area],{exclude:["getBytesInUse"],errorFirst:!1}):this.#e=this.#a[this.area])}catch{}}setCopiedKeySet(e){this.#h=new Set(e)}rawGetAll=()=>this.#e?.get();getAll=async()=>{let e=await this.rawGetAll();return Object.entries(e).filter(([t])=>this.isValidKey(t)).reduce((t,[s,a])=>(t[this.getUnnamespacedKey(s)]=a,t),{})};copy=async e=>{let t=e===void 0;if(!t&&!this.copiedKeySet.has(e)||!this.allCopied||!this.hasExtensionApi)return!1;let s=this.allCopied?await this.rawGetAll():await this.#e.get((t?[...this.copiedKeySet]:[e]).map(this.getNamespacedKey));if(!s)return!1;let a=!1;for(let r in s){let n=s[r],i=this.#t?.getItem(r);this.#t?.setItem(r,n),a||=n!==i}return a};rawGet=async e=>this.hasExtensionApi?(await this.#e.get(e))[e]:this.isCopied(e)?this.#t?.getItem(e):null;rawSet=async(e,t)=>(this.isCopied(e)&&this.#t?.setItem(e,t),this.hasExtensionApi&&await this.#e.set({[e]:t}),null);clear=async(e=!1)=>{e&&this.#t?.clear(),await this.#e.clear()};rawRemove=async e=>{this.isCopied(e)&&this.#t?.removeItem(e),this.hasExtensionApi&&await this.#e.remove(e)};removeAll=async()=>{let e=await this.getAll(),t=Object.keys(e);await Promise.all(t.map(this.remove))};watch=e=>{let t=this.isWatchSupported();return t&&this.#r(e),t};#r=e=>{for(let t in e){let s=this.getNamespacedKey(t),a=this.#s.get(s)?.callbackSet||new Set;if(a.add(e[t]),a.size>1)continue;let r=(n,i)=>{if(i!==this.area||!n[s])return;let c=this.#s.get(s);if(!c)throw new Error(`Storage comms does not exist for nsKey: ${s}`);Promise.all([this.parseValue(n[s].newValue),this.parseValue(n[s].oldValue)]).then(([g,d])=>{for(let u of c.callbackSet)u({newValue:g,oldValue:d},i)})};this.#a.onChanged.addListener(r),this.#s.set(s,{callbackSet:a,listener:r})}};unwatch=e=>{let t=this.isWatchSupported();return t&&this.#c(e),t};#c(e){for(let t in e){let s=this.getNamespacedKey(t),a=e[t],r=this.#s.get(s);r&&(r.callbackSet.delete(a),r.callbackSet.size===0&&(this.#s.delete(s),this.#a.onChanged.removeListener(r.listener)))}}unwatchAll=()=>this.#i();#i(){this.#s.forEach(({listener:e})=>this.#a.onChanged.removeListener(e)),this.#s.clear()}async getItem(e){return this.get(e)}async setItem(e,t){await this.set(e,t)}async removeItem(e){return this.remove(e)}};var{crypto:h}=globalThis,f=o=>Array.from(new Uint8Array(o),e=>e.toString(16).padStart(2,"0")).join(""),w=o=>globalThis.btoa(String.fromCharCode.apply(null,o)),S=o=>Uint8Array.from(globalThis.atob(o),e=>e.charCodeAt(0)),A=147e3,b=16,K=32,C=8,x="|:|",y=class extends l{#a=new TextEncoder;#e=new TextDecoder;#t="PBKDF2";#n="SHA-256";#s="AES-GCM";#h=256;#o;#r;#c;get#i(){return this.#r+this.#c}#l;get passwordKey(){if(!this.#l)throw new Error("Password not set, please first call setPassword.");return this.#l}setPassword=async(e,{iterations:t=A,saltSize:s=b,ivSize:a=K,namespace:r="",nsSize:n=C,nsSeparator:i=x}={})=>{this.#o=t,this.#r=s,this.#c=a;let c=this.#a.encode(e);if(this.#l=await h.subtle.importKey("raw",c,{name:this.#t},!1,["deriveKey"]),r)this.keyNamespace=`${r}${i}`;else{let g=await h.subtle.digest(this.#n,c);this.keyNamespace=`${f(g).slice(-n)}${i}`}};migrate=async e=>{let t=await this.getAll(),s=Object.keys(t).filter(a=>this.isValidKey(a)).map(a=>this.getUnnamespacedKey(a));return await Promise.all(s.map(async a=>{let r=await this.get(a);await e.set(a,r)})),e};decrypt=async e=>{let t=this.passwordKey,s=S(e),a=s.slice(0,this.#r),r=s.slice(this.#r,this.#i),n=s.slice(this.#i),i=await this.#g(a,t,["decrypt"]),c=await h.subtle.decrypt({name:this.#s,iv:r},i,n);return this.#e.decode(c)};encrypt=async e=>{let t=this.passwordKey,s=h.getRandomValues(new Uint8Array(this.#r)),a=h.getRandomValues(new Uint8Array(this.#c)),r=await this.#g(s,t,["encrypt"]),n=new Uint8Array(await h.subtle.encrypt({name:this.#s,iv:a},r,this.#a.encode(e))),i=new Uint8Array(this.#i+n.byteLength);return i.set(s,0),i.set(a,this.#r),i.set(n,this.#i),w(i)};get=async e=>{let t=this.getNamespacedKey(e),s=await this.rawGet(t);return this.parseValue(s)};set=async(e,t)=>{let s=this.getNamespacedKey(e),a=JSON.stringify(t),r=await this.encrypt(a);return await this.rawSet(s,r)};remove=async e=>{let t=this.getNamespacedKey(e);return await this.rawRemove(t)};parseValue=async e=>{if(e!=null){let t=await this.decrypt(e);return JSON.parse(t)}};#g=(e,t,s)=>h.subtle.deriveKey({name:this.#t,hash:this.#n,salt:e,iterations:this.#o},t,{name:this.#s,length:this.#h},!1,s)};export{x as DEFAULT_NS_SEPARATOR,y as SecureStorage};
